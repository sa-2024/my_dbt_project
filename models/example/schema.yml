
version: 2

models:
  - name: my_first_dbt_model
    description: "A starter dbt model"
    columns:
      - name: id
        description: "The primary key for this table"
        data_tests:
          - unique
          - not_null

  - name: my_second_dbt_model
    description: "A starter dbt model"
    columns:
      - name: id
        description: "The primary key for this table"
        data_tests:
          - unique
          - not_null

  - name: person
    description: "Model for storing person data"
    tests:
      # inside macros add file "test_person_distinct_first_name.sql"
      - person_distinct_first_name
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - first_name
            - birthdate
            # - unique:
            #     column_name: first_name
            # - not_null:
            #     column_name: first_name
            # - last_name
      # - custom_test:
      # - sql: |
      #     SELECT first_name, count(distinct last_name)
      #     FROM {{ ref('person') }}
      #     WHERE first_name IS NOT NULL
      #     GROUP BY first_name
      #     HAVING count(distinct last_name) > 1            